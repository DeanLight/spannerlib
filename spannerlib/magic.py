# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/040_magic_system.ipynb.

# %% auto 0
__all__ = ['logger', 'MagicSession', 'spannerlogMagic', 'load_ipython_extension']

# %% ../nbs/040_magic_system.ipynb 3
from typing import Optional
import logging
logger = logging.getLogger(__name__)

from IPython.core.magic import (Magics, magics_class, line_cell_magic)
from singleton_decorator import singleton
from .session import Session

# %% ../nbs/040_magic_system.ipynb 4
@singleton
class MagicSession():
    def __init__(self):
        self.session = Session()
    def set(self,sess):
        self.session = sess

# TODO add getmagic and setmagic functions and make them the public interface

# %% ../nbs/040_magic_system.ipynb 8
@magics_class
class spannerlogMagic(Magics):
    @line_cell_magic
    def spannerlog(self, line: str, cell: Optional[str] = None) -> None:
        # import locally to prevent circular import issues
        magic_session = MagicSession().session

        code = cell if cell else line

        _ = magic_session.export(code,display_results=True)

def load_ipython_extension(ipython):
    ipython.register_magics(spannerlogMagic)
